"""
날짜 : 2021.08.10
학습 : SWEA PI_list_01
제목 : 4831. [파이썬 S/W 문제해결 기본] 1일차 - 전기버스
문제 :
A도시는 전기버스를 운행하려고 한다. 전기버스는 한번 충전으로 이동할 수 있는
정류장 수가 정해져 있어서, 중간에 충전기가 설치된 정류장을 만들기로 했다.

버스는 0번에서 출발해 종점인 N번 정류장까지 이동하고,
한번 충전으로 최대한 이동할 수 있는 정류장 수 K가 정해져 있다.

충전기가 설치된 M개의 정류장 번호가 주어질 때, 최소한 몇 번의 충전을 해야 종점에
도착할 수 있는지 출력하는 프로그램을 만드시오.
만약 충전기 설치가 잘못되어 종점에 도착할 수 없는 경우는 0을 출력한다. 출발지에는
항상 충전기가 설치되어 있지만 충전횟수에는 포함하지 않는다.

[예시]
다음은 K = 3, N = 10, M = 5, 충전기가 설치된 정류장이 1, 3, 5, 7, 9인 경우의 예이다.

[입력]
첫 줄에 노선 수 T가 주어진다.  ( 1 ≤ T ≤ 50 )
각 노선별로 K, N, M이 주어지고, 다음줄에 M개의 정류장 번호가 주어진다. ( 1 ≤ K, N, M ≤ 100 )
3
3 10 5
1 3 5 7 9
3 10 5
1 3 7 8 9
5 20 5
4 7 9 14 17

[출력]
#과 노선번호, 빈칸에 이어 최소 충전횟수 또는 0을 출력한다.
#1 3
#2 0
#3 4
"""
T = int(input())

for tc in range(1, T+1):
    K, N, M = map(int, input().split()) #K :충전시 이동 수 , N : 종점, M : 충전기 갯수
    charge = list(map(int, input().split()))
    lst_stop = [0] * (N+1) #0~N까지
    cnt = 0 #충전 횟수

    for i in charge: #idx는 정류장 번호, 1은 충전소 있음
        lst_stop[i] += 1

    start_idx = 0
    cnt = 0
    while True:
        start_idx += K #구간 나눴을때 뒤에서 부터 접근하기 위해
        if start_idx >= N: #idx 시작이 종점이라면 while 끝
            break

        for i in range(start_idx, start_idx - K, -1): #구간 뒤에서 부터 접근
            if start_idx[i] == 1: #뒤에서부터 충전소 있으면
                cnt += 1 # 충전 횟수 더하기
                start_idx = i #시작 지점을 충전소 있는 곳으로
                break #for 문 나가서 while 부터 시작
        
        else:
            ans = 0 #중간에 충전 지점이 끊기면
            break # 끝

    print('#{} {}'.format(tc, cnt))
