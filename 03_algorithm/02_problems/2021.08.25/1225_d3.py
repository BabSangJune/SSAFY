"""
날짜 : 2021.08.25
학습 : SWEA D3
제목 : 1225. [파이썬 S/W 문제해결 기본] 5일차 - 배열 최소 합
문제 :
다음 주어진 조건에 따라 n개의 수를 처리하면 8자리의 암호를 생성할 수 있다.
- 8개의 숫자를 입력 받는다.
- 첫 번째 숫자를 1 감소한 뒤, 맨 뒤로 보낸다.
다음 첫 번째 수는 2 감소한 뒤 맨 뒤로, 그 다음 첫 번째 수는 3을 감소하고 맨 뒤로, 그 다음 수는 4, 그 다음 수는 5를 감소한다.
이와 같은 작업을 한 사이클이라 한다.
- 숫자가 감소할 때 0보다 작아지는 경우 0으로 유지되며, 프로그램은 종료된다. 이 때의 8자리의 숫자 값이 암호가 된다.

[암호 도출]

[제약 사항]
주어지는 각 수는 integer 범위를 넘지 않는다.
마지막 암호 배열은 모두 한 자리 수로 구성되어 있다.

[입력]
각 테스트 케이스의 첫 줄에는 테스트 케이스의 번호가 주어지고, 그 다음 줄에는 8개의 데이터가 주어진다.

[출력]
#부호와 함께 테스트케이스의 번호를 출력하고, 공백 문자 후 테스트 케이스의 답을 출력한다.

"""
import sys
sys.stdin = open("1225.txt", 'r')

# T = int(input())
for tc in range(1, 11):
    N = int(input())
    nums = list(map(int, input().split()))


    while nums[-1] > 0: #마지막이 0이 보다 크면 계속 실행
        for i in range(1, 6): #1~5까지
            temp = nums.pop(0) - i #nums의 처음들고와서 i빼기
            if temp <= 0: #temp가 0이하이면
                temp = 0 #0으로 만들고
                nums.append(temp) #넣고
                break #끝

            else:
                nums.append(temp)# 외엔 그냥 넣기

    print('#{}'.format(N), end=' ')
    print(*nums)



